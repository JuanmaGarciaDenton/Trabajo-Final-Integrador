<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>15, 20</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /D/oD3DQdlLv1wAAAABJRU5ErkJggg==
</value>
  </data>
</root>